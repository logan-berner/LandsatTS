% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsat_export_ts.R
\name{lsat_export_ts}
\alias{lsat_export_ts}
\title{Export Surface Reflectance Time-Series from the Landsat record using rgee}
\usage{
lsat_export_ts(
  pixel_coords_sf,
  site_from = "site",
  chunks_from = NULL,
  this_chunk_only = NULL,
  max_chunk_size = 250,
  drive_export_dir = "lsatTS_export",
  file_prefix = "lsatTS_export",
  startJulian = 152,
  endJulian = 243,
  start_date = "1984-01-01",
  end_date = "2021-01-01",
  BUFFER_DIST = 0,
  SCALE = 30,
  MASK_VALUE = 0
)
}
\arguments{
\item{pixel_coords_sf}{Simple feature object of pixel / site coordinates.}

\item{site_from}{The column name in pixel_coords_sf that specifies the site (defaults to "site" as generated by lsat_get_pixel_centres)}

\item{chunks_from}{Column name in pixel_coords_sf to divide the exports into chunks. Over-rides chuncking by size (see max_chunk_size).}

\item{this_chunk_only}{Name of a specific chunk to be exported. Useful for re-exporting a single chunk should the export fail for some reason.}

\item{max_chunk_size}{Maximum number of pixel / site coordinates to be exported in each chunk. Defaults to 250.}

\item{drive_export_dir}{Folder on Google Drive to export to. Defaults to "lsatTS_export",}

\item{file_prefix}{Optional file_prefix.}

\item{startJulian}{Optional first day of year to extract for.}

\item{endJulian}{Optional Last day of year to extract for.}

\item{start_date}{Optional extraction start date.}

\item{end_date}{Optional extraction end date.}

\item{BUFFER_DIST}{Buffer distance around pixel / site coordinate (default: 0).}

\item{SCALE}{Scale for extraction (defaults to 30 m nominal Landsat pixel size)}

\item{MASK_VALUE}{Optional masking value for global surface water mask (ask Logan for more)}
}
\value{
list of started rgee tasks.
}
\description{
This function exports the surface reflectance time series for a set of point-coordinates
from the whole Landsat record using the Google Earth Engine (account required).
These resulting time-series can then be processed using the remainder of the lsatTS package workflow.
For polygon geometries consider using lsat_get_pixel_centers() to generate pixel center coordinates
for all pixels within a given polygon.
}
\details{
Please note: Unlike the other functions in this package, this function does NOT
return the time-series as an object, instead it returns a list of the tasks issued
for the export. The time-series are exported as CSV objects to he GEE user's google drive.
This export allows for more efficient scheduling, larger exports and does not require the R session to
continue to run in the background while the requests are processed on the Earth Engine.
}
\examples{
# Using sf, dplyr and rgee
library(sf)
library(dplyr)
library(rgee)

# Initialize EE
ee_Initialize()

# Generate test points
test_points_sf <- st_sfc(st_point(c(-149.6026, 68.62574)),
                         st_point(c(-149.6003, 68.62524)),
                         st_point(c(-75.78057, 78.87038)),
                         st_point(c(-75.77098, 78.87256)),
                         st_point(c(-20.56182, 74.47670)),
                         st_point(c(-20.55376, 74.47749)), crs = 4326) \%>\%
  st_sf() \%>\%
  mutate(site = c("toolik_1",
                      "toolik_2",
                      "ellesmere_1",
                      "ellesmere_1",
                      "zackenberg_1",
                      "zackenberg_2"),
         region = c("toolik", "toolik",
                    "ellesmere", "ellesmere",
                    "zackenberg", "zackenberg"))
# Export time-series using lsat_export_ts()
task_list <- lsat_export_ts(test_points_sf)

# Export time-series using with a chunk size of 2
task_list <- lsat_export_ts(test_points_sf, max_chunk_size = 2)

# Export time-series in chunks by column
task_list <- lsat_export_ts(test_points_sf, chunks_from = "region")
}
\author{
Jakob J. Assmann and Richard Massey
}
